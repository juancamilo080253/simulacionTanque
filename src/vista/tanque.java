package vista;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import static java.lang.Integer.parseInt;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.Timer;
import rsscalelabel.RSScaleLabel;

public class tanque extends javax.swing.JFrame {

    public tanque() {
        initComponents();
        RSScaleLabel.setScaleLabel(imagenCasa, "src/imagenes/vivienda.png");
        jProgressBar1.setOrientation(SwingConstants.VERTICAL);
        jProgressBar1.setComponentOrientation(java.awt.ComponentOrientation.RIGHT_TO_LEFT);
        jButton2.setEnabled(false);
        jButton4.setEnabled(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        imagenCasa = new javax.swing.JLabel();
        valvula1 = new javax.swing.JLabel();
        llave1 = new javax.swing.JLabel();
        btnAutomatico = new javax.swing.JButton();
        vEmergencia = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 204));

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jProgressBar1.setBackground(new java.awt.Color(255, 255, 255));
        jProgressBar1.setForeground(new java.awt.Color(73, 154, 245));
        jProgressBar1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jProgressBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton4.setText("Detener");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Iniciar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("Detener");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setText("Iniciar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Nirmala UI", 1, 36)); // NOI18N
        jLabel2.setText("Simulación Tanque De Agua");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Control de Llenado");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Control de Vaciado");

        imagenCasa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/vivienda.png"))); // NOI18N

        valvula1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/tuberiaValvulaRoja.png"))); // NOI18N

        llave1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/tuberiaLlaveRoja.png"))); // NOI18N

        btnAutomatico.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAutomatico.setText("Automático");
        btnAutomatico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutomaticoActionPerformed(evt);
            }
        });

        vEmergencia.setBackground(new java.awt.Color(204, 204, 255));
        vEmergencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/valvulaEmergenciaRoja.png"))); // NOI18N
        vEmergencia.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        vEmergencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vEmergenciaActionPerformed(evt);
            }
        });

        jLabel5.setText("Valvula De Emergencia");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(valvula1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(78, 78, 78)
                                                .addComponent(jLabel5)
                                                .addGap(58, 58, 58))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(vEmergencia)
                                                .addGap(92, 92, 92)))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(75, 75, 75)
                                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(75, 75, 75)
                                                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                    .addGap(69, 69, 69)
                                                    .addComponent(jLabel3)))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(llave1)
                                        .addGap(62, 62, 62)
                                        .addComponent(imagenCasa, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(52, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addGap(113, 113, 113))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAutomatico, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(149, 149, 149))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(valvula1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAutomatico, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(vEmergencia)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(llave1)))
                        .addGap(65, 65, 65))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(24, 24, 24)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(28, 28, 28)
                        .addComponent(imagenCasa, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private boolean valvulaEmergenciaActiva = false;
    private int nivelMaximo = 100; // Por defecto
    private int nivelMinimo = 20;  // Por defecto

    private Timer timerLlenado;
    private Timer timerVaciado;
    
    private void pedirNivelesAlUsuario() {
        while (true) {
            try {
                String max = JOptionPane.showInputDialog(this, "¿Hasta qué nivel quieres llenar el tanque? (1-100)", "100");
                if (max == null) return; // usuario canceló
                int tempMax = parseInt(max);
                        
                String min = JOptionPane.showInputDialog(this, "¿Nivel mínimo para activar llenado automático? (1-" + tempMax + ")", "20");
                if (min == null) return; // usuario canceló
                int tempMin = parseInt(min);

                if (tempMin > tempMax || tempMin == 0 || tempMax == 0 ) {
                    JOptionPane.showMessageDialog(this, "El nivel mínimo no puede ser mayor que el máximo. Intenta de nuevo.");
                    continue; // vuelve a pedir los valores
                }else if(tempMin == tempMax){
                    JOptionPane.showMessageDialog(this, "Valores iguales. Intenta de nuevo.");
                    continue; // vuelve a pedir los valores
                }

                nivelMaximo = tempMax;
                nivelMinimo = tempMin;
                break; // valores válidos, salir del bucle
                
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Por favor ingresa valores numéricos válidos.");
            }
        }
    }
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (automaticoActivo) return;
        
        jButton3.setEnabled(false);
        jButton4.setEnabled(true);
        
        if (timerVaciado != null && timerVaciado.isRunning()) {
            return; // Ya está vaciando
        }

        cambiarIconoLlave("tuberiaLlaveVerde.png");
        rsscalelabel.RSScaleLabel.setScaleLabel(llave1, "src/imagenes/tuberiaLlaveVerde.png");
        
        timerVaciado = new Timer(100, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if (jProgressBar1.getValue() > 0) {
                    jProgressBar1.setValue(jProgressBar1.getValue() - 1);
                } else {
                    timerVaciado.stop();
                    jButton3.setEnabled(true);
                    jButton4.setEnabled(false);
                    cambiarIconoLlave("tuberiaLlaveRoja.png");
                    rsscalelabel.RSScaleLabel.setScaleLabel(llave1, "src/imagenes/tuberiaLlaveRoja.png");
                }
            }
        });
        timerVaciado.start();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        if (timerLlenado != null && timerLlenado.isRunning()) {
            timerLlenado.stop();
            cambiarIconoValvula("tuberiaValvulaRoja.png");
            jButton1.setEnabled(true);
            jButton2.setEnabled(false);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        if (valvulaEmergenciaActiva) {
            JOptionPane.showMessageDialog(this, "La válvula de emergencia está activada. Desactívala para permitir el ingreso de agua.");
            return;
        }
        
        if (automaticoActivo) return;
        
        cambiarIconoValvula("tuberiaValvulaVerde.png");
        cambiarIconoLlave("tuberiaLlaveRoja.png");
        rsscalelabel.RSScaleLabel.setScaleLabel(llave1, "src/imagenes/tuberiaLlaveRoja.png");
        
        jButton1.setEnabled(false); 
        jButton2.setEnabled(true); 
        
        if (timerVaciado != null && timerVaciado.isRunning()) {
            timerVaciado.stop();
        }
        
        timerLlenado = new Timer(100, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if (jProgressBar1.getValue() < nivelMaximo) {
                    jProgressBar1.setValue(jProgressBar1.getValue() + 1);
                } else {
                    timerLlenado.stop();
                    cambiarIconoValvula("tuberiaValvulaRoja.png");
                    jButton1.setEnabled(true);
                    jButton2.setEnabled(false);
                }
            }
        });
       
     timerLlenado.start();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void iniciarLlenadoAutomatico() {
        cambiarIconoValvula("tuberiaValvulaVerde.png");
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        
        if (timerVaciado != null && timerVaciado.isRunning()) timerVaciado.stop();
        
        timerLlenado = new Timer(100, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if (!automaticoActivo) {
                    timerLlenado.stop();
                    return;
                }
                if (jProgressBar1.getValue() < nivelMaximo) {
                    jProgressBar1.setValue(jProgressBar1.getValue() + 1);
                } else {
                    timerLlenado.stop();
                    cambiarIconoValvula("tuberiaValvulaRoja.png");
                    if (automaticoActivo) {
                        iniciarVaciadoAutomatico();
                    }
                }
            }
        });
    
      timerLlenado.start();
    }
    
    private void iniciarVaciadoAutomatico() {
        cambiarIconoLlave("tuberiaLlaveVerde.png");
        jButton3.setEnabled(false);
        jButton4.setEnabled(false);
        
        if (timerLlenado != null && timerLlenado.isRunning()) timerLlenado.stop();

        timerVaciado = new Timer(100, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if (!automaticoActivo) {
                timerVaciado.stop();
                return;
                }
                if (jProgressBar1.getValue() > nivelMinimo) {
                    jProgressBar1.setValue(jProgressBar1.getValue() - 1);
                } else {
                    timerVaciado.stop();
                    cambiarIconoLlave("tuberiaLlaveRoja.png");
                    if (automaticoActivo) {
                        iniciarLlenadoAutomatico();
                    }
                }
            }
        });

        timerVaciado.start();
    }


    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (timerVaciado != null && timerVaciado.isRunning()) {
            timerVaciado.stop();
            cambiarIconoLlave("tuberiaLlaveRoja.png");
            rsscalelabel.RSScaleLabel.setScaleLabel(llave1, "src/imagenes/tuberiaLlaveRoja.png");
            jButton3.setEnabled(true);
            jButton4.setEnabled(false);
        }
    }//GEN-LAST:event_jButton4ActionPerformed
   
    // PROCESO AUTOMATICO METODOS 
    
    private void deshabilitarBotonesManuales() {
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        jButton4.setEnabled(false);
    }
    
    private void habilitarBotonesManuales() {
        jButton1.setEnabled(true);
        jButton3.setEnabled(true);
    }
    
    private void detenerTimers() {
        if (timerLlenado != null && timerLlenado.isRunning()) timerLlenado.stop();
        if (timerVaciado != null && timerVaciado.isRunning()) timerVaciado.stop();
    }
    
    private boolean automaticoActivo = false;
    
    private void btnAutomaticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutomaticoActionPerformed
        
        automaticoActivo = !automaticoActivo; // Cambia el estado
        
        if (valvulaEmergenciaActiva) {
            JOptionPane.showMessageDialog(this, "La válvula de emergencia está activada. Desactívala para permitir el ingreso de agua.");
            return;
        }
    
        if (automaticoActivo) {
            btnAutomatico.setText("Detener Automático");
            deshabilitarBotonesManuales();
            pedirNivelesAlUsuario(); // Pide min/max al usuario cada vez que se activa
            
            if (jProgressBar1.getValue() <= nivelMinimo) {
                iniciarLlenadoAutomatico();
            } else if (jProgressBar1.getValue() >= nivelMaximo) {
                iniciarVaciadoAutomatico();
            } else {
                iniciarLlenadoAutomatico();
            }
        } else {
            btnAutomatico.setText("Iniciar Automático");
            habilitarBotonesManuales();
            detenerTimers();
            nivelMaximo = 100; // Por defecto
            nivelMinimo = 0; 
        }
    }//GEN-LAST:event_btnAutomaticoActionPerformed

    private void vEmergenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vEmergenciaActionPerformed
        
        valvulaEmergenciaActiva = !valvulaEmergenciaActiva;
        
        if (valvulaEmergenciaActiva) {
            vEmergencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/valvulaEmergenciaVerde.png")));
        
        
            // Detén el llenado manual si está activo
            if (timerLlenado != null && timerLlenado.isRunning()) {
                timerLlenado.stop();
                // Opcional: actualiza el icono de la válvula de llenado
                cambiarIconoValvula("tuberiaValvulaRoja.png");
                // Deshabilita botones si lo deseas
                jButton1.setEnabled(true);
                jButton2.setEnabled(false);
            }

            // Detén el modo automático si está activo
            if (automaticoActivo) {
                automaticoActivo = false;
                if (timerLlenado != null && timerLlenado.isRunning()) {
                    timerLlenado.stop();
                }
                btnAutomatico.setEnabled(true);
                btnAutomatico.setText("Iniciar Automático");
            }

            JOptionPane.showMessageDialog(this, "¡Emergencia! El llenado se ha detenido.");
        } else {
            // Cambia el icono a rojo
            vEmergencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/valvulaEmergenciaRoja.png")));
            habilitarBotonesManuales();
    }
        
    }//GEN-LAST:event_vEmergenciaActionPerformed
    
    private void cambiarIconoValvula(String nombreArchivo) {
    ImageIcon icono = new ImageIcon(getClass().getResource("/imagenes/" + nombreArchivo));
    valvula1.setIcon(icono);
}
    private void cambiarIconoLlave(String nombreArchivo) {
    ImageIcon icono = new ImageIcon(getClass().getResource("/imagenes/" + nombreArchivo));
    llave1.setIcon(icono);
}
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tanque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tanque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tanque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tanque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tanque().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAutomatico;
    private javax.swing.JLabel imagenCasa;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JLabel llave1;
    private javax.swing.JButton vEmergencia;
    private javax.swing.JLabel valvula1;
    // End of variables declaration//GEN-END:variables
}
